#!/usr/bin/python3
# Copyright 2021 iiPython

# Fork of https://github.com/haideralipunjabi/polybar-browsermediacontrol
# Lower overhead, better performance, now uses the Spotify DBus API

# Main function (to utilize local scope)
def main():
    from sys import argv
    from pydbus import SessionBus
    from re import compile, MULTILINE

    av = argv[1:]
    state_icons = {"Paused": {"text": "Paused", "icon": "\uf28b"}}
    media_icons = {"spotify": "\uf1bc", "youtube": "\uf16a"}
    media_icons_regex = compile("(" + "|".join(media_icons.keys()) + ")", MULTILINE)

    bus = SessionBus()
    try:
        Player = bus.get(
            "org.mpris.MediaPlayer2.spotify",
            "/org/mpris/MediaPlayer2"
        )

    except Exception:
        return print("")

    def get_media_icon(url):
        try:
            return media_icons[media_icons_regex.findall(url)[0]]

        except Exception:
            return None

    pbs = Player.PlaybackStatus
    if pbs != "Stopped":
        if av and av[0] == "v":
            Player.Volume += int(av[1]) * 0.1
            return

        # Handle icons
        if pbs in state_icons:
            st = state_icons[pbs]
            return print(f"{st['icon']}  {st['text']}")

        # Handle info
        meta = Player.Metadata
        media_icon = get_media_icon(Player.Metadata["xesam:url"].lower())
        title = meta["xesam:title"] + " - " + ", ".join(meta["xesam:artist"])
        if title in ["Spotify â€“ Web Player"]:
            return print("")

        print((f"{media_icon}  " if media_icon else "") + (lambda text: text[:45] + "..." if len(text) > 45 and 45 > 0 else text)(title))

    else:
        print("")

main()
